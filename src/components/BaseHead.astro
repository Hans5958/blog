---
import { SITE_AUTHOR, SITE_TITLE, SITE_TWITTER, SITE_MASTODON } from '../config.js'
import '../styles/global.css'

export interface Props {
	title?: string
	description?: string
	coverSrc?: string
	coverAlt?: string
	noAnalytics?: boolean
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

let { 
	title = "", 
	description = "", 
	coverSrc = "",
	coverAlt = "",
	noAnalytics = false 
} = Astro.props

let titleDisplay: string

if (title === "") {
	title = SITE_TITLE
	titleDisplay = SITE_TITLE
} else {
	titleDisplay = `${title} - ${ SITE_TITLE }`
}
---

<title>{ titleDisplay }</title>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
<meta name="description" content={ description } />
<meta name="author" content={ SITE_AUTHOR } />
<meta name="generator" content={ Astro.generator } />
<link rel="canonical" href={canonicalURL} />

<meta property="og:type" content="website" />
<meta property="og:url" content={ Astro.url }>
<meta property="og:title" content={ title } />
<meta property="og:description" content={ description }>
<meta property="og:site_name" content={ SITE_TITLE } />
<meta property="og:locale" content="en_US" />
{ coverSrc && <>
	<meta property="og:image" content={ new URL(coverSrc, Astro.url) } />
	<meta property="og:image:alt" content={ coverAlt } />
</> }

{ coverSrc ? <>
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:image" content={ new URL(coverSrc, Astro.url) } />
</> : <meta name="twitter:card" content="summary" /> }
<meta name="twitter:site" content={ SITE_TWITTER } />
<meta name="twitter:creator" content={ SITE_TWITTER } />
<meta name="twitter:url" content={ Astro.url } />
<meta name="twitter:title" content={ title } />
<meta name="twitter:description" content={ description } />

<meta name="fediverse:creator" content={ SITE_MASTODON }>
