---
import type { CollectionEntry } from 'astro:content';
import TableOfContents from '../components/TableOfContents.astro';
import Default from './Default.astro';
import Giscus from '@giscus/vue'
import baseUrl from '../components/baseUrl.js';

interface Props {
  post: CollectionEntry<'posts'>;
}

// `post` will match your 'blog' collection schema type
const { post } = Astro.props;
const { Content, headings } = await post.render();

const coverImageAstro = post.data.cover?.src || ""
---

<Default title={post.data.title} description={post.data.description}>
	
	<article class="container mx-auto md:max-w-[768px] py-6" itemscope itemtype="http://schema.org/BlogPosting">
		<header class="post-header mb-4">
			<h1 class="text-4xl font-bold mb-2" itemprop="name headline">{ post.data.title }</h1>
			<p class="">
				<time class="post-date-published" datetime={ post.data.date.toISOString() } itemprop="datePublished">
					{ post.data.date.toLocaleDateString('en-UK', { year: 'numeric', month: 'long', day: 'numeric' }) }
				</time>
			</p>
		</header>

		{ post.data.cover && (<>
			<img itemprop="image" class="mb-3" src={ baseUrl(coverImageAstro.toString()) } alt="{ post.data.cover.alt }" />
		</>) }

		<div class="border mb-3 p-4 text-gray-500">
			<h3 class="mb-2 pb-2 border-b">Contents</h3>
			<div class="-ml-6">
				<TableOfContents headings={ headings } />
			</div>
		</div>
		
		<div class="post-body" itemprop="articleBody">
			<Content />
		</div>
		
		<Giscus
			id="comments"
			repo="ScratchAddons/website-v2"
			repoId="MDEwOlJlcG9zaXRvcnkzNjU3NzE1MTQ="
			category="Page comments"
			categoryId="DIC_kwDOFc06-s4COGAf"
			mapping="pathname"
			strict="1"
			reactionsEnabled="1"
			emitMetadata="0"
			inputPosition="top"
			theme="light"
			lang="en"
			loading="lazy"
		/>	
	</article>
</Default>