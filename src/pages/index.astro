---
import Default from '../layouts/Default.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'
import Icon from 'astro-icon'

import { getCollection } from 'astro:content'
import PostPreviewGrid from '../components/PostPreview/Grid.astro'
import PaginationDummy from '../components/Pagination/Dummy.astro'
import relativeUrl from '../components/urlHelper.js'

const blogEntries = await getCollection('posts')
blogEntries.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 10)

---

<Default
	title=""
	description="Welcome to my blog! This is where I will drop my articles and texts about anything: programming, gaming, or other interesting topics. This blog is mainly built with Astro and Tailwind CSS, and it is work in progress, so stay tuned."
>

<section class="bg-linear-to-br from-slate-700 to-slate-500 text-white">
	<div class="container mx-auto max-w-[1140px] flex flex-col md:flex-row justify py-12 w-full justify-center md:justify-between">
		<div class="flex flex-col justify-center">
			<h1 class="text-7xl font-bold mb-6">Blog of Hans</h1>
			<p>Welcome to my blog! This is where I will drop my articles and texts about anything: programming, gaming, or other interesting topics.</p>
			<p>This blog is mainly built with Astro and Tailwind CSS, and it is work in progress, so stay tuned.</p>
		</div>
		<div class="flex flex-col justify-center mt-4 md:mt-0 md:ml-4">
		</div>
	</div>
</section>

<section id="latest" class="container mx-auto max-w-[1140px] pt-12 mb-12">
	<h2 class="text-5xl font-bold">Latest</h2>
	<p class="mt-4 mb-8">Latest posts of any kind by yours truly. For more posts, check out <a class="color-link" href={ relativeUrl('/archive') }>the archive</a>.</p>
	<PostPreviewGrid posts={ blogEntries.slice(0, 4) } />
</section>

<section id="articles" class="container mx-auto max-w-[1140px] mt-12 pb-12">
	<h2 class="text-5xl font-bold">Articles</h2>
	<p class="mt-4 mb-8">For more in-depth reading, check out articles made by yours truly.</p>
	<PostPreviewGrid posts={ blogEntries.filter(post => post.data.category === 'Article').slice(0, 10) } />
	<PaginationDummy lastPage={ Math.ceil(blogEntries.filter(post => post.data.category === 'Article').length / 10) } url='/category/article/page/2' />
</section>

</Default>