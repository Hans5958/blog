---
import { CollectionEntry, getCollection } from 'astro:content'
import { paginate } from '../../../../components/paginate.js'
import ArchiveParted from '../../../../layouts/ArchiveParted.astro'

export async function getStaticPaths() {
	const blogEntries = await getCollection('posts')
	blogEntries.sort((a, b) => a.data.date.getTime() - b.data.date.getTime())

	const dates: { [index: number]: CollectionEntry<'posts'>[] } = {}
	
	blogEntries.forEach(post => {
		const postDate = `${post.data.date.getFullYear()}-${(post.data.date.getMonth() + 1).toString().padStart(2, '0')}`
		if (!dates[postDate]) {
			dates[postDate] = []
		}
		dates[postDate].push(post)
	})

	return Object.entries(dates).flatMap(([date, pages]) => {
		const [year, month] = date.split('-')
		const paginateResult = paginate(pages)
		return paginateResult.map(paginatePage => ({
			params: { year, month, page: paginatePage.currentPage },
			props: { year, month, page: paginatePage }
		}))
	})
}

const { page, year, month } = Astro.props;
const title = `Month: ${year}-${month}`
---

<ArchiveParted page={page} title={title} />
