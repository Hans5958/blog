---
import { CollectionEntry, getCollection } from 'astro:content'
import { paginate } from '../../../components/paginate.js'
import ArchiveParted from '../../../layouts/ArchiveParted.astro'

export async function getStaticPaths() {
	const blogEntries = await getCollection('posts')
	blogEntries.sort((a, b) => a.data.date.getTime() - b.data.date.getTime())

	const years: { [index: number]: CollectionEntry<'posts'>[] } = {}
	
	blogEntries.forEach(post => {
		const postYear = post.data.date.getFullYear()
		if (!years[postYear]) {
			years[postYear] = []
		}
		years[postYear].push(post)
	})

	return Object.entries(years).flatMap(([year, pages]) => {
		let paginateResult = paginate(pages)
		return paginateResult.map(paginatePage => ({
			params: { year: year, page: paginatePage.currentPage },
			props: { year: year, page: paginatePage }
		}))
	})
}

const { page, year } = Astro.props;
const title = `Year: ${year}`
---

<ArchiveParted page={page} title={title} />
