---
import { CollectionEntry, getCollection } from 'astro:content'
import ArchiveParted from '../../../../layouts/ArchiveParted.astro'

export async function getStaticPaths({ paginate }) {
	const blogEntries = await getCollection('posts')
	blogEntries.sort((a, b) => b.data.date.getTime() - a.data.date.getTime())

	const tags: { [index: string]: CollectionEntry<'posts'>[] } = {}
	
	blogEntries.forEach(post => {
		const postTags = post.data.tags
		// console.log(postTags)
		postTags.forEach(tag => {
			if (!tags[tag]) {
				tags[tag] = []
			}
			tags[tag].push(post)
		})
	})
	
	return Object.entries(tags).flatMap(([tag, pages]) => {
		let paginateResult = paginate(pages, { params: { tag }, pageSize: 10 })
		return paginateResult.map(paginatePage => ({
			params: { tag: tag, ...paginatePage.params },
			props: { tag: tag, ...paginatePage.props }
		}))
	})
}

const { page, tag } = Astro.props;
const title = `Tag: ${tag}`
---

<ArchiveParted page={page} title={title} />
